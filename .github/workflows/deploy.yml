name: Task CI/CD Workflow

on:
  push:
    branches:
      - main

jobs:
  build-test:
    runs-on: ubuntu-latest
    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ROOT_PASSWORD: root
          MYSQL_DATABASE: task
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Debug MySQL connection
        run: |
            echo "Testing MySQL connection..."
            mysql -h localhost -P 3306 -u root -proot -e "SHOW DATABASES;"

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Wait for MySQL to be ready
        run: sleep 20 # Wait for the MySQL container to initialize

      - name: Set environment variables
        env:
          DATABASE_URL: mysql://root:root@localhost:3306/task
          JWT_SECRET: ${{ secrets.JWT_SECRET }}
          JWT_EXPIRATION: ${{ secrets.JWT_EXPIRATION }}
          NODE_ENV: test
        run: |
          echo "DATABASE_URL=${DATABASE_URL}" >> $GITHUB_ENV
          echo "JWT_SECRET=${JWT_SECRET}" >> $GITHUB_ENV
          echo "JWT_EXPIRATION=${JWT_EXPIRATION}" >> $GITHUB_ENV
          echo "NODE_ENV=${NODE_ENV}" >> $GITHUB_ENV

      - name: Run Prisma migrations
        run: yarn prisma migrate dev --name init --skip-generate

      - name: Run tests
        run: yarn test

      - name: Build the application
        run: yarn build

  build-push:
    runs-on: ubuntu-latest
    needs: build-test
    steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Log in to DockerHub
        run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

      - name: Build Docker Image
        run: docker build -t abdulhaleemsan/task-app:latest .

      - name: Push Docker Image
        run: docker push abdulhaleemsan/task-app:latest

  deploy:
    runs-on: ubuntu-latest
    needs: build-push
    steps:
      - name: SSH into EC2 and Deploy
        uses: appleboy/ssh-action@v0.5.0
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_SSH_KEY }}
          port: 22
          script: |
            # Navigate to project directory
            cd /home/ec2-user/task || git clone https://github.com/Abdulhaleem-6/task.git
            cd task

            # Export kubeconfig for k3s
            export KUBECONFIG=/etc/rancher/k3s/k3s.yaml

            # Navigate to the k8s folder and apply Kubernetes manifests
            cd k8s
            kubectl apply -f mysql-service.yaml
            kubectl apply -f deployment.yaml
